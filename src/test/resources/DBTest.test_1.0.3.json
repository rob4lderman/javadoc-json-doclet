[
 {
  "methods": [],
  "containingPackage": {
   "name": "com.surfapi.test",
   "metaType": "package"
  },
  "superclassType": null,
  "commentText": "DemoAnnotation is a custom annotation type.",
  "seeTags": [],
  "name": "DemoAnnotation",
  "qualifiedTypeName": "com.surfapi.test.DemoAnnotation",
  "interfaces": [
   {
    "qualifiedName": "java.lang.annotation.Annotation",
    "name": "Annotation",
    "modifiers": "public interface",
    "metaType": "interface"
   }
  ],
  "modifiers": "public interface",
  "containingClass": null,
  "fields": [],
  "tags": [
   {
    "text": "Rob",
    "name": "@author",
    "kind": "@author"
   }
  ],
  "typeParameters": [],
  "simpleTypeName": "DemoAnnotation",
  "qualifiedName": "com.surfapi.test.DemoAnnotation",
  "innerClasses": [],
  "constructors": [],
  "metaType": "annotationType",
  "typeName": "DemoAnnotation",
  "firstSentenceTags": [
   {
    "text": "DemoAnnotation is a custom annotation type.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "interfaceTypes": [
   {
    "typeName": "Annotation",
    "dimension": "",
    "simpleTypeName": "Annotation",
    "qualifiedTypeName": "java.lang.annotation.Annotation",
    "toString": "java.lang.annotation.Annotation"
   }
  ],
  "dimension": "",
  "typeParamTags": [],
  "superclass": null,
  "enumConstants": [],
  "modifierSpecifier": 513,
  "toString": "com.surfapi.test.DemoAnnotation",
  "annotations": [],
  "rawCommentText": " DemoAnnotation is a custom annotation type.
 
 @author Rob
",
  "inlineTags": [
   {
    "text": "DemoAnnotation is a custom annotation type.",
    "name": "Text",
    "kind": "Text"
   }
  ]
 },
 {
  "methods": [
   {
    "qualifiedName": "com.surfapi.test.DemoJavadoc.someAbstractMethod",
    "name": "someAbstractMethod",
    "parameters": [
     {
      "toString": "java.lang.String[] strs"
     }
    ],
    "modifiers": "public abstract",
    "returnType": {
     "typeNameAndDimension": "void",
     "toString": "void"
    },
    "metaType": "method"
   },
   {
    "qualifiedName": "com.surfapi.test.DemoJavadoc.someStaticMethod",
    "name": "someStaticMethod",
    "parameters": [],
    "modifiers": "public static",
    "returnType": {
     "typeNameAndDimension": "int",
     "toString": "int"
    },
    "metaType": "method"
   },
   {
    "qualifiedName": "com.surfapi.test.DemoJavadoc.parse",
    "name": "parse",
    "parameters": [
     {
      "toString": "URL url"
     },
     {
      "toString": "java.util.List<T> y"
     }
    ],
    "modifiers": "public",
    "returnType": {
     "typeNameAndDimension": "InputStream",
     "toString": "java.io.InputStream"
    },
    "metaType": "method"
   },
   {
    "qualifiedName": "com.surfapi.test.DemoJavadoc.methodWithTypes",
    "name": "methodWithTypes",
    "parameters": [
     {
      "toString": "T[] classLevelType"
     },
     {
      "toString": "E methodLevelType"
     }
    ],
    "modifiers": "public",
    "returnType": {
     "typeNameAndDimension": "E",
     "toString": "E"
    },
    "metaType": "method"
   },
   {
    "qualifiedName": "com.surfapi.test.DemoJavadoc.call",
    "name": "call",
    "parameters": [],
    "modifiers": "public",
    "returnType": {
     "typeNameAndDimension": "String",
     "toString": "java.lang.String"
    },
    "metaType": "method"
   }
  ],
  "containingPackage": {
   "name": "com.surfapi.test",
   "metaType": "package"
  },
  "superclassType": {
   "typeName": "Object",
   "dimension": "",
   "simpleTypeName": "Object",
   "qualifiedTypeName": "java.lang.Object",
   "toString": "java.lang.Object"
  },
  "commentText": "A test file used for parsing its javadoc comments.

 This file was copied from {@link it.sauronsoftware.feed4j.FeedParser FeedParser}.",
  "seeTags": [
   {
    "text": "<a href=\"http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javadoc.html#link\">Javadoc Reference Guide</a>",
    "name": "@see",
    "kind": "@see"
   },
   {
    "text": "com.surfapi.javadoc.MyDoclet",
    "name": "@see",
    "kind": "@see"
   },
   {
    "text": "java.net.URL#equals The URL.equals method",
    "name": "@see",
    "kind": "@see"
   }
  ],
  "name": "DemoJavadoc",
  "qualifiedTypeName": "com.surfapi.test.DemoJavadoc",
  "interfaces": [
   {
    "qualifiedName": "java.util.concurrent.Callable",
    "name": "Callable",
    "modifiers": "public interface",
    "metaType": "interface"
   }
  ],
  "modifiers": "public abstract",
  "containingClass": null,
  "fields": [
   {
    "constantValueExpression": null,
    "qualifiedName": "com.surfapi.test.DemoJavadoc.y",
    "name": "y",
    "type": {
     "typeNameAndDimension": "String[]",
     "toString": "java.lang.String[]"
    },
    "modifiers": "protected transient volatile",
    "metaType": "field"
   },
   {
    "constantValueExpression": "\"ZZZ\"",
    "qualifiedName": "com.surfapi.test.DemoJavadoc.z",
    "name": "z",
    "type": {
     "typeNameAndDimension": "String",
     "toString": "java.lang.String"
    },
    "modifiers": "public static final",
    "metaType": "field"
   }
  ],
  "tags": [
   {
    "text": "<T> A generic type parm T, extends List",
    "name": "@param",
    "kind": "@param"
   },
   {
    "text": "Rob Alderman",
    "name": "@author",
    "kind": "@author"
   },
   {
    "text": "1.0",
    "name": "@since",
    "kind": "@since"
   },
   {
    "text": "1.0",
    "name": "@version",
    "kind": "@version"
   },
   {
    "text": "<a href=\"http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javadoc.html#link\">Javadoc Reference Guide</a>",
    "name": "@see",
    "kind": "@see"
   },
   {
    "text": "com.surfapi.javadoc.MyDoclet",
    "name": "@see",
    "kind": "@see"
   },
   {
    "text": "java.net.URL#equals The URL.equals method",
    "name": "@see",
    "kind": "@see"
   }
  ],
  "typeParameters": [
   {
    "bounds": [
     {
      "typeName": "List",
      "dimension": "",
      "simpleTypeName": "List",
      "qualifiedTypeName": "java.util.List",
      "toString": "java.util.List"
     }
    ],
    "typeName": "T",
    "dimension": "",
    "simpleTypeName": "T",
    "qualifiedTypeName": "T",
    "toString": "T extends java.util.List"
   }
  ],
  "simpleTypeName": "DemoJavadoc",
  "qualifiedName": "com.surfapi.test.DemoJavadoc",
  "innerClasses": [
   {
    "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass",
    "name": "DemoJavadoc.NonStaticInnerClass",
    "modifiers": "public",
    "metaType": "class"
   },
   {
    "qualifiedName": "com.surfapi.test.DemoJavadoc.StaticInnerClass",
    "name": "DemoJavadoc.StaticInnerClass",
    "modifiers": "public static",
    "metaType": "class"
   }
  ],
  "constructors": [
   {
    "qualifiedName": "com.surfapi.test.DemoJavadoc",
    "name": "DemoJavadoc",
    "parameters": [
     {
      "toString": "String b"
     }
    ],
    "modifiers": "public",
    "metaType": "constructor"
   }
  ],
  "metaType": "class",
  "typeName": "DemoJavadoc",
  "firstSentenceTags": [
   {
    "text": "A test file used for parsing its javadoc comments.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "interfaceTypes": [
   {
    "typeName": "Callable",
    "dimension": "",
    "simpleTypeName": "Callable",
    "qualifiedTypeName": "java.util.concurrent.Callable",
    "toString": "java.util.concurrent.Callable<java.lang.String>"
   }
  ],
  "dimension": "",
  "typeParamTags": [
   {
    "text": "<T> A generic type parm T, extends List",
    "parameterComment": "A generic type parm T, extends List",
    "name": "@param",
    "parameterName": "T",
    "kind": "@param"
   }
  ],
  "superclass": {
   "qualifiedName": "java.lang.Object",
   "name": "Object",
   "modifiers": "public",
   "metaType": "class"
  },
  "enumConstants": [],
  "modifierSpecifier": 1025,
  "toString": "com.surfapi.test.DemoJavadoc<T extends java.util.List>",
  "annotations": [
   {
    "elementValues": [],
    "annotationType": {
     "qualifiedName": "com.surfapi.test.DemoAnnotation",
     "name": "DemoAnnotation",
     "modifiers": "public interface",
     "metaType": "annotationType"
    }
   }
  ],
  "rawCommentText": " A test file used for parsing its javadoc comments.

 This file was copied from {@link it.sauronsoftware.feed4j.FeedParser FeedParser}.
 
 @param <T> A generic type parm T, extends List
 
 @author Rob Alderman
 @since 1.0
 @version 1.0

 @see <a href=\"http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javadoc.html#link\">Javadoc Reference Guide</a>
 @see com.surfapi.javadoc.MyDoclet
 @see java.net.URL#equals The URL.equals method

",
  "inlineTags": [
   {
    "text": "A test file used for parsing its javadoc comments.

 This file was copied from ",
    "name": "Text",
    "kind": "Text"
   },
   {
    "text": "it.sauronsoftware.feed4j.FeedParser FeedParser",
    "name": "@link",
    "kind": "@see"
   },
   {
    "text": ".",
    "name": "Text",
    "kind": "Text"
   }
  ]
 },
 {
  "tags": [],
  "typeParameters": [],
  "qualifiedName": "com.surfapi.test.DemoJavadoc.someAbstractMethod",
  "paramTags": [],
  "containingPackage": {
   "name": "com.surfapi.test",
   "metaType": "package"
  },
  "returnType": {
   "typeName": "void",
   "dimension": "",
   "simpleTypeName": "void",
   "qualifiedTypeName": "void",
   "toString": "void"
  },
  "isSynthetic": false,
  "metaType": "method",
  "thrownExceptionTypes": [],
  "commentText": "This is an abstract method.",
  "firstSentenceTags": [
   {
    "text": "This is an abstract method.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "typeParamTags": [],
  "seeTags": [],
  "name": "someAbstractMethod",
  "modifierSpecifier": 1025,
  "parameters": [
   {
    "typeName": "java.lang.String[]",
    "name": "strs",
    "toString": "java.lang.String[] strs",
    "annotations": [],
    "type": {
     "typeName": "String",
     "dimension": "[]",
     "simpleTypeName": "String",
     "qualifiedTypeName": "java.lang.String",
     "toString": "java.lang.String[]"
    }
   }
  ],
  "flatSignature": "(String[])",
  "annotations": [],
  "containingClass": {
   "qualifiedName": "com.surfapi.test.DemoJavadoc",
   "name": "DemoJavadoc",
   "modifiers": "public abstract",
   "metaType": "class"
  },
  "modifiers": "public abstract",
  "thrownExceptions": [],
  "rawCommentText": " This is an abstract method.
",
  "signature": "(java.lang.String[])",
  "inlineTags": [
   {
    "text": "This is an abstract method.",
    "name": "Text",
    "kind": "Text"
   }
  ]
 },
 {
  "tags": [],
  "typeParameters": [],
  "qualifiedName": "com.surfapi.test.DemoJavadoc.someStaticMethod",
  "paramTags": [],
  "containingPackage": {
   "name": "com.surfapi.test",
   "metaType": "package"
  },
  "returnType": {
   "typeName": "int",
   "dimension": "",
   "simpleTypeName": "int",
   "qualifiedTypeName": "int",
   "toString": "int"
  },
  "isSynthetic": false,
  "metaType": "method",
  "thrownExceptionTypes": [],
  "commentText": "This is a static method.",
  "firstSentenceTags": [
   {
    "text": "This is a static method.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "typeParamTags": [],
  "seeTags": [],
  "name": "someStaticMethod",
  "modifierSpecifier": 9,
  "parameters": [],
  "flatSignature": "()",
  "annotations": [],
  "containingClass": {
   "qualifiedName": "com.surfapi.test.DemoJavadoc",
   "name": "DemoJavadoc",
   "modifiers": "public abstract",
   "metaType": "class"
  },
  "modifiers": "public static",
  "thrownExceptions": [],
  "rawCommentText": " This is a static method.
",
  "signature": "()",
  "inlineTags": [
   {
    "text": "This is a static method.",
    "name": "Text",
    "kind": "Text"
   }
  ]
 },
 {
  "tags": [
   {
    "text": "url   The first parm is a feed URL.
              The description for the url parm has two lines.",
    "name": "@param",
    "kind": "@param"
   },
   {
    "text": "y     An List param named y.",
    "name": "@param",
    "kind": "@param"
   },
   {
    "text": "An input stream for the feed.",
    "name": "@return",
    "kind": "@return"
   },
   {
    "text": "IOException
             I/O error during conetnts retrieving.",
    "name": "@throws",
    "kind": "@throws"
   },
   {
    "text": "IllegalArgumentException
             The document retrieved is not valid XML.",
    "name": "@throws",
    "kind": "@throws"
   },
   {
    "text": "",
    "name": "@deprecated",
    "kind": "@deprecated"
   }
  ],
  "typeParameters": [],
  "qualifiedName": "com.surfapi.test.DemoJavadoc.parse",
  "paramTags": [
   {
    "text": "url   The first parm is a feed URL.
              The description for the url parm has two lines.",
    "parameterComment": "The first parm is a feed URL.
              The description for the url parm has two lines.",
    "name": "@param",
    "parameterName": "url",
    "kind": "@param"
   },
   {
    "text": "y     An List param named y.",
    "parameterComment": "An List param named y.",
    "name": "@param",
    "parameterName": "y",
    "kind": "@param"
   }
  ],
  "containingPackage": {
   "name": "com.surfapi.test",
   "metaType": "package"
  },
  "returnType": {
   "typeName": "InputStream",
   "dimension": "",
   "simpleTypeName": "InputStream",
   "qualifiedTypeName": "java.io.InputStream",
   "toString": "java.io.InputStream"
  },
  "isSynthetic": false,
  "metaType": "method",
  "thrownExceptionTypes": [
   {
    "typeName": "IOException",
    "dimension": "",
    "simpleTypeName": "IOException",
    "qualifiedTypeName": "java.io.IOException",
    "toString": "java.io.IOException"
   },
   {
    "typeName": "IllegalArgumentException",
    "dimension": "",
    "simpleTypeName": "IllegalArgumentException",
    "qualifiedTypeName": "java.lang.IllegalArgumentException",
    "toString": "java.lang.IllegalArgumentException"
   }
  ],
  "commentText": "This is the first sentence of the javadoc description for method parse(URL).
 This is the second sentence of the javadoc. For more
 info on URLs go {@link java.net.URL here}.  How about a 4th sentence?",
  "firstSentenceTags": [
   {
    "text": "This is the first sentence of the javadoc description for method parse(URL).",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "typeParamTags": [],
  "seeTags": [],
  "name": "parse",
  "modifierSpecifier": 1,
  "parameters": [
   {
    "typeName": "URL",
    "name": "url",
    "toString": "URL url",
    "annotations": [],
    "type": {
     "typeName": "URL",
     "dimension": "",
     "simpleTypeName": "URL",
     "qualifiedTypeName": "java.net.URL",
     "toString": "java.net.URL"
    }
   },
   {
    "typeName": "java.util.List<T>",
    "name": "y",
    "toString": "java.util.List<T> y",
    "annotations": [],
    "type": {
     "typeName": "List",
     "dimension": "",
     "simpleTypeName": "List",
     "qualifiedTypeName": "java.util.List",
     "toString": "java.util.List<T>"
    }
   }
  ],
  "flatSignature": "(URL, List<T>)",
  "annotations": [],
  "containingClass": {
   "qualifiedName": "com.surfapi.test.DemoJavadoc",
   "name": "DemoJavadoc",
   "modifiers": "public abstract",
   "metaType": "class"
  },
  "modifiers": "public",
  "thrownExceptions": [
   {
    "qualifiedName": "java.io.IOException",
    "name": "IOException",
    "modifiers": "public",
    "metaType": "class"
   },
   {
    "qualifiedName": "java.lang.IllegalArgumentException",
    "name": "IllegalArgumentException",
    "modifiers": "public",
    "metaType": "class"
   }
  ],
  "rawCommentText": " This is the first sentence of the javadoc description for method parse(URL).
 This is the second sentence of the javadoc. For more
 info on URLs go {@link java.net.URL here}.  How about a 4th sentence? 
 
 @param url   The first parm is a feed URL.
              The description for the url parm has two lines.
 @param y     An List param named y.
             
 @return An input stream for the feed.
 
 @throws IOException
             I/O error during conetnts retrieving.
 @throws IllegalArgumentException
             The document retrieved is not valid XML.

 @deprecated
",
  "signature": "(java.net.URL, java.util.List<T>)",
  "inlineTags": [
   {
    "text": "This is the first sentence of the javadoc description for method parse(URL).
 This is the second sentence of the javadoc. For more
 info on URLs go ",
    "name": "Text",
    "kind": "Text"
   },
   {
    "text": "java.net.URL here",
    "name": "@link",
    "kind": "@see"
   },
   {
    "text": ".  How about a 4th sentence?",
    "name": "Text",
    "kind": "Text"
   }
  ]
 },
 {
  "tags": [
   {
    "text": "classLevelType Is of the class-level generic type T.",
    "name": "@param",
    "kind": "@param"
   },
   {
    "text": "methodLevelType Is of the method-level generic type E.",
    "name": "@param",
    "kind": "@param"
   },
   {
    "text": "<E> A generic type parm E",
    "name": "@param",
    "kind": "@param"
   },
   {
    "text": "E some object of type E",
    "name": "@return",
    "kind": "@return"
   }
  ],
  "typeParameters": [
   {
    "bounds": [],
    "typeName": "E",
    "dimension": "",
    "simpleTypeName": "E",
    "qualifiedTypeName": "E",
    "toString": "E"
   }
  ],
  "qualifiedName": "com.surfapi.test.DemoJavadoc.methodWithTypes",
  "paramTags": [
   {
    "text": "classLevelType Is of the class-level generic type T.",
    "parameterComment": "Is of the class-level generic type T.",
    "name": "@param",
    "parameterName": "classLevelType",
    "kind": "@param"
   },
   {
    "text": "methodLevelType Is of the method-level generic type E.",
    "parameterComment": "Is of the method-level generic type E.",
    "name": "@param",
    "parameterName": "methodLevelType",
    "kind": "@param"
   }
  ],
  "containingPackage": {
   "name": "com.surfapi.test",
   "metaType": "package"
  },
  "returnType": {
   "typeName": "E",
   "dimension": "",
   "simpleTypeName": "E",
   "qualifiedTypeName": "E",
   "toString": "E"
  },
  "isSynthetic": false,
  "metaType": "method",
  "thrownExceptionTypes": [],
  "commentText": "",
  "firstSentenceTags": [],
  "typeParamTags": [
   {
    "text": "<E> A generic type parm E",
    "parameterComment": "A generic type parm E",
    "name": "@param",
    "parameterName": "E",
    "kind": "@param"
   }
  ],
  "seeTags": [],
  "name": "methodWithTypes",
  "modifierSpecifier": 1,
  "parameters": [
   {
    "typeName": "T[]",
    "name": "classLevelType",
    "toString": "T[] classLevelType",
    "annotations": [],
    "type": {
     "typeName": "T",
     "dimension": "[]",
     "simpleTypeName": "T",
     "qualifiedTypeName": "T",
     "toString": "T[]"
    }
   },
   {
    "typeName": "E",
    "name": "methodLevelType",
    "toString": "E methodLevelType",
    "annotations": [],
    "type": {
     "typeName": "E",
     "dimension": "",
     "simpleTypeName": "E",
     "qualifiedTypeName": "E",
     "toString": "E"
    }
   }
  ],
  "flatSignature": "(T[], E)",
  "annotations": [],
  "containingClass": {
   "qualifiedName": "com.surfapi.test.DemoJavadoc",
   "name": "DemoJavadoc",
   "modifiers": "public abstract",
   "metaType": "class"
  },
  "modifiers": "public",
  "thrownExceptions": [],
  "rawCommentText": " @param classLevelType Is of the class-level generic type T.
 @param methodLevelType Is of the method-level generic type E.
 @param <E> A generic type parm E
 
 @return E some object of type E
",
  "signature": "(T[], E)",
  "inlineTags": []
 },
 {
  "tags": [],
  "typeParameters": [],
  "qualifiedName": "com.surfapi.test.DemoJavadoc.call",
  "paramTags": [],
  "containingPackage": {
   "name": "com.surfapi.test",
   "metaType": "package"
  },
  "returnType": {
   "typeName": "String",
   "dimension": "",
   "simpleTypeName": "String",
   "qualifiedTypeName": "java.lang.String",
   "toString": "java.lang.String"
  },
  "isSynthetic": false,
  "metaType": "method",
  "thrownExceptionTypes": [
   {
    "typeName": "Exception",
    "dimension": "",
    "simpleTypeName": "Exception",
    "qualifiedTypeName": "java.lang.Exception",
    "toString": "java.lang.Exception"
   }
  ],
  "commentText": "{@inheritDoc}",
  "firstSentenceTags": [
   {
    "text": "",
    "name": "Text",
    "kind": "Text"
   },
   {
    "text": "",
    "name": "@inheritDoc",
    "kind": "@inheritDoc"
   }
  ],
  "typeParamTags": [],
  "seeTags": [],
  "name": "call",
  "modifierSpecifier": 1,
  "parameters": [],
  "flatSignature": "()",
  "annotations": [
   {
    "elementValues": [],
    "annotationType": {
     "qualifiedName": "java.lang.Override",
     "name": "Override",
     "modifiers": "public interface",
     "metaType": "annotationType"
    }
   }
  ],
  "containingClass": {
   "qualifiedName": "com.surfapi.test.DemoJavadoc",
   "name": "DemoJavadoc",
   "modifiers": "public abstract",
   "metaType": "class"
  },
  "modifiers": "public",
  "thrownExceptions": [
   {
    "qualifiedName": "java.lang.Exception",
    "name": "Exception",
    "modifiers": "public",
    "metaType": "class"
   }
  ],
  "rawCommentText": " {@inheritDoc}
",
  "signature": "()",
  "inlineTags": [
   {
    "text": "",
    "name": "Text",
    "kind": "Text"
   },
   {
    "text": "",
    "name": "@inheritDoc",
    "kind": "@inheritDoc"
   }
  ]
 },
 {
  "tags": [
   {
    "text": "b     Some {@link java.lang.String String} parameter named b.",
    "name": "@param",
    "kind": "@param"
   }
  ],
  "typeParameters": [],
  "qualifiedName": "com.surfapi.test.DemoJavadoc",
  "paramTags": [
   {
    "text": "b     Some {@link java.lang.String String} parameter named b.",
    "parameterComment": "Some {@link java.lang.String String} parameter named b.",
    "name": "@param",
    "parameterName": "b",
    "kind": "@param"
   }
  ],
  "containingPackage": {
   "name": "com.surfapi.test",
   "metaType": "package"
  },
  "isSynthetic": false,
  "metaType": "constructor",
  "thrownExceptionTypes": [],
  "commentText": "CTOR.",
  "firstSentenceTags": [
   {
    "text": "CTOR.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "typeParamTags": [],
  "seeTags": [],
  "name": "DemoJavadoc",
  "modifierSpecifier": 1,
  "parameters": [
   {
    "typeName": "String",
    "name": "b",
    "toString": "String b",
    "annotations": [],
    "type": {
     "typeName": "String",
     "dimension": "",
     "simpleTypeName": "String",
     "qualifiedTypeName": "java.lang.String",
     "toString": "java.lang.String"
    }
   }
  ],
  "flatSignature": "(String)",
  "annotations": [],
  "containingClass": {
   "qualifiedName": "com.surfapi.test.DemoJavadoc",
   "name": "DemoJavadoc",
   "modifiers": "public abstract",
   "metaType": "class"
  },
  "modifiers": "public",
  "thrownExceptions": [],
  "rawCommentText": " CTOR.
 
 @param b     Some {@link java.lang.String String} parameter named b. 
",
  "signature": "(java.lang.String)",
  "inlineTags": [
   {
    "text": "CTOR.",
    "name": "Text",
    "kind": "Text"
   }
  ]
 },
 {
  "tags": [],
  "qualifiedName": "com.surfapi.test.DemoJavadoc.y",
  "containingPackage": {
   "name": "com.surfapi.test",
   "metaType": "package"
  },
  "type": {
   "typeName": "String",
   "dimension": "[]",
   "simpleTypeName": "String",
   "qualifiedTypeName": "java.lang.String",
   "toString": "java.lang.String[]"
  },
  "serialFieldTags": [],
  "isSynthetic": false,
  "metaType": "field",
  "constantValue": null,
  "constantValueExpression": null,
  "commentText": "A protected member String array.",
  "firstSentenceTags": [
   {
    "text": "A protected member String array.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "seeTags": [],
  "name": "y",
  "modifierSpecifier": 196,
  "annotations": [],
  "containingClass": {
   "qualifiedName": "com.surfapi.test.DemoJavadoc",
   "name": "DemoJavadoc",
   "modifiers": "public abstract",
   "metaType": "class"
  },
  "modifiers": "protected transient volatile",
  "rawCommentText": " A protected member String array.
",
  "inlineTags": [
   {
    "text": "A protected member String array.",
    "name": "Text",
    "kind": "Text"
   }
  ]
 },
 {
  "tags": [],
  "qualifiedName": "com.surfapi.test.DemoJavadoc.z",
  "containingPackage": {
   "name": "com.surfapi.test",
   "metaType": "package"
  },
  "type": {
   "typeName": "String",
   "dimension": "",
   "simpleTypeName": "String",
   "qualifiedTypeName": "java.lang.String",
   "toString": "java.lang.String"
  },
  "serialFieldTags": [],
  "isSynthetic": false,
  "metaType": "field",
  "constantValue": "ZZZ",
  "constantValueExpression": "\"ZZZ\"",
  "commentText": "A static final member named z.",
  "firstSentenceTags": [
   {
    "text": "A static final member named z.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "seeTags": [],
  "name": "z",
  "modifierSpecifier": 25,
  "annotations": [],
  "containingClass": {
   "qualifiedName": "com.surfapi.test.DemoJavadoc",
   "name": "DemoJavadoc",
   "modifiers": "public abstract",
   "metaType": "class"
  },
  "modifiers": "public static final",
  "rawCommentText": " A static final member named z.
",
  "inlineTags": [
   {
    "text": "A static final member named z.",
    "name": "Text",
    "kind": "Text"
   }
  ]
 },
 {
  "methods": [
   {
    "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass.innerClassMethodBlah",
    "name": "innerClassMethodBlah",
    "parameters": [],
    "modifiers": "public",
    "returnType": {
     "typeNameAndDimension": "void",
     "toString": "void"
    },
    "metaType": "method"
   }
  ],
  "containingPackage": {
   "name": "com.surfapi.test",
   "metaType": "package"
  },
  "superclassType": {
   "typeName": "Object",
   "dimension": "",
   "simpleTypeName": "Object",
   "qualifiedTypeName": "java.lang.Object",
   "toString": "java.lang.Object"
  },
  "commentText": "Javadoc for non-static inner class.",
  "seeTags": [],
  "name": "DemoJavadoc.NonStaticInnerClass",
  "qualifiedTypeName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass",
  "interfaces": [],
  "modifiers": "public",
  "containingClass": {
   "qualifiedName": "com.surfapi.test.DemoJavadoc",
   "name": "DemoJavadoc",
   "modifiers": "public abstract",
   "metaType": "class"
  },
  "fields": [],
  "tags": [],
  "typeParameters": [],
  "simpleTypeName": "NonStaticInnerClass",
  "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass",
  "innerClasses": [],
  "constructors": [
   {
    "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass",
    "name": "DemoJavadoc.NonStaticInnerClass",
    "parameters": [],
    "modifiers": "public",
    "metaType": "constructor"
   }
  ],
  "metaType": "class",
  "typeName": "DemoJavadoc.NonStaticInnerClass",
  "firstSentenceTags": [
   {
    "text": "Javadoc for non-static inner class.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "interfaceTypes": [],
  "dimension": "",
  "typeParamTags": [],
  "superclass": {
   "qualifiedName": "java.lang.Object",
   "name": "Object",
   "modifiers": "public",
   "metaType": "class"
  },
  "enumConstants": [],
  "modifierSpecifier": 1,
  "toString": "com.surfapi.test.DemoJavadoc<T extends java.util.List>.NonStaticInnerClass",
  "annotations": [],
  "rawCommentText": " Javadoc for non-static inner class.
",
  "inlineTags": [
   {
    "text": "Javadoc for non-static inner class.",
    "name": "Text",
    "kind": "Text"
   }
  ]
 },
 {
  "tags": [],
  "typeParameters": [],
  "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass.innerClassMethodBlah",
  "paramTags": [],
  "containingPackage": {
   "name": "com.surfapi.test",
   "metaType": "package"
  },
  "returnType": {
   "typeName": "void",
   "dimension": "",
   "simpleTypeName": "void",
   "qualifiedTypeName": "void",
   "toString": "void"
  },
  "isSynthetic": false,
  "metaType": "method",
  "thrownExceptionTypes": [],
  "commentText": "This here is a method within the inner class, the non-static one.",
  "firstSentenceTags": [
   {
    "text": "This here is a method within the inner class, the non-static one.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "typeParamTags": [],
  "seeTags": [],
  "name": "innerClassMethodBlah",
  "modifierSpecifier": 1,
  "parameters": [],
  "flatSignature": "()",
  "annotations": [],
  "containingClass": {
   "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass",
   "name": "DemoJavadoc.NonStaticInnerClass",
   "modifiers": "public",
   "metaType": "class"
  },
  "modifiers": "public",
  "thrownExceptions": [],
  "rawCommentText": " This here is a method within the inner class, the non-static one.
",
  "signature": "()",
  "inlineTags": [
   {
    "text": "This here is a method within the inner class, the non-static one.",
    "name": "Text",
    "kind": "Text"
   }
  ]
 },
 {
  "tags": [],
  "typeParameters": [],
  "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass",
  "paramTags": [],
  "containingPackage": {
   "name": "com.surfapi.test",
   "metaType": "package"
  },
  "isSynthetic": false,
  "metaType": "constructor",
  "thrownExceptionTypes": [],
  "commentText": "",
  "firstSentenceTags": [],
  "typeParamTags": [],
  "seeTags": [],
  "name": "DemoJavadoc.NonStaticInnerClass",
  "modifierSpecifier": 1,
  "parameters": [],
  "flatSignature": "()",
  "annotations": [],
  "containingClass": {
   "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass",
   "name": "DemoJavadoc.NonStaticInnerClass",
   "modifiers": "public",
   "metaType": "class"
  },
  "modifiers": "public",
  "thrownExceptions": [],
  "rawCommentText": "",
  "signature": "()",
  "inlineTags": []
 },
 {
  "methods": [],
  "containingPackage": {
   "name": "com.surfapi.test",
   "metaType": "package"
  },
  "superclassType": {
   "typeName": "Object",
   "dimension": "",
   "simpleTypeName": "Object",
   "qualifiedTypeName": "java.lang.Object",
   "toString": "java.lang.Object"
  },
  "commentText": "Javadoc for static inner class.",
  "seeTags": [],
  "name": "DemoJavadoc.StaticInnerClass",
  "qualifiedTypeName": "com.surfapi.test.DemoJavadoc.StaticInnerClass",
  "interfaces": [],
  "modifiers": "public static",
  "containingClass": {
   "qualifiedName": "com.surfapi.test.DemoJavadoc",
   "name": "DemoJavadoc",
   "modifiers": "public abstract",
   "metaType": "class"
  },
  "fields": [],
  "tags": [],
  "typeParameters": [],
  "simpleTypeName": "StaticInnerClass",
  "qualifiedName": "com.surfapi.test.DemoJavadoc.StaticInnerClass",
  "innerClasses": [],
  "constructors": [
   {
    "qualifiedName": "com.surfapi.test.DemoJavadoc.StaticInnerClass",
    "name": "DemoJavadoc.StaticInnerClass",
    "parameters": [],
    "modifiers": "public",
    "metaType": "constructor"
   }
  ],
  "metaType": "class",
  "typeName": "DemoJavadoc.StaticInnerClass",
  "firstSentenceTags": [
   {
    "text": "Javadoc for static inner class.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "interfaceTypes": [],
  "dimension": "",
  "typeParamTags": [],
  "superclass": {
   "qualifiedName": "java.lang.Object",
   "name": "Object",
   "modifiers": "public",
   "metaType": "class"
  },
  "enumConstants": [],
  "modifierSpecifier": 9,
  "toString": "com.surfapi.test.DemoJavadoc.StaticInnerClass",
  "annotations": [],
  "rawCommentText": " Javadoc for static inner class.
",
  "inlineTags": [
   {
    "text": "Javadoc for static inner class.",
    "name": "Text",
    "kind": "Text"
   }
  ]
 },
 {
  "tags": [],
  "typeParameters": [],
  "qualifiedName": "com.surfapi.test.DemoJavadoc.StaticInnerClass",
  "paramTags": [],
  "containingPackage": {
   "name": "com.surfapi.test",
   "metaType": "package"
  },
  "isSynthetic": false,
  "metaType": "constructor",
  "thrownExceptionTypes": [],
  "commentText": "",
  "firstSentenceTags": [],
  "typeParamTags": [],
  "seeTags": [],
  "name": "DemoJavadoc.StaticInnerClass",
  "modifierSpecifier": 1,
  "parameters": [],
  "flatSignature": "()",
  "annotations": [],
  "containingClass": {
   "qualifiedName": "com.surfapi.test.DemoJavadoc.StaticInnerClass",
   "name": "DemoJavadoc.StaticInnerClass",
   "modifiers": "public static",
   "metaType": "class"
  },
  "modifiers": "public",
  "thrownExceptions": [],
  "rawCommentText": "",
  "signature": "()",
  "inlineTags": []
 },
 {
  "tags": [
   {
    "text": "Rob Alderman",
    "name": "@author",
    "kind": "@author"
   },
   {
    "text": "1.x",
    "name": "@since",
    "kind": "@since"
   }
  ],
  "annotationTypes": [
   {
    "qualifiedName": "com.surfapi.test.DemoAnnotation",
    "name": "DemoAnnotation",
    "modifiers": "public interface",
    "metaType": "annotationType"
   }
  ],
  "ordinaryClasses": [
   {
    "qualifiedName": "com.surfapi.test.DemoJavadoc",
    "name": "DemoJavadoc",
    "modifiers": "public abstract",
    "metaType": "class"
   },
   {
    "qualifiedName": "com.surfapi.test.DemoJavadoc.NonStaticInnerClass",
    "name": "DemoJavadoc.NonStaticInnerClass",
    "modifiers": "public",
    "metaType": "class"
   },
   {
    "qualifiedName": "com.surfapi.test.DemoJavadoc.StaticInnerClass",
    "name": "DemoJavadoc.StaticInnerClass",
    "modifiers": "public static",
    "metaType": "class"
   }
  ],
  "metaType": "package",
  "enums": [],
  "exceptions": [],
  "commentText": "Javadoc for the package, from package-info.",
  "firstSentenceTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ],
  "errors": [],
  "seeTags": [],
  "name": "com.surfapi.test",
  "interfaces": [],
  "annotations": [],
  "rawCommentText": "
 Javadoc for the package, from package-info.

 @author Rob Alderman
 @since 1.x
",
  "inlineTags": [
   {
    "text": "Javadoc for the package, from package-info.",
    "name": "Text",
    "kind": "Text"
   }
  ]
 }
]